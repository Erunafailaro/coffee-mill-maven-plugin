<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="143" tokens="665">
<file line="24" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/mojos/compile/JSHintOptions.java"/>
<file line="23" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/mojos/reporting/JSHintOptions.java"/>
<codefragment>
<![CDATA[
public class JSHintOptions {
    //String format options
    private String options;

    private Boolean bitwise;
    private Boolean camelcase;
    private Boolean curly;
    private Boolean eqeqeq;
    private Boolean es3;
    private Boolean forin;
    private Boolean immed;
    private Boolean indent;
    private Boolean latedef;
    private Boolean newcap;
    private Boolean noarg;
    private Boolean noempty;
    private Boolean nonew;
    private Boolean plusplus;
    private String  quotmark; //single, double or true
    private Boolean undef;
    private Boolean unused;
    private Boolean strict;
    private Boolean trailing;
    private Integer maxparams;
    private Integer maxdepth;
    private Integer maxstatements;
    private Integer maxcomplexity;
    private Integer maxlen;

    public String[] format(){
        Set<String> formatOpts = new HashSet<String>();

        //Parse the string
        if(options !=null && !options.isEmpty()){
            options=options.replaceAll(" ",""); //remove space

            //must match ^\w+(=(\w+))?(,\w+(=(\w+))?)*$
            if(!options.matches("^\\w+(=(\\w+))?(,\\w+(=(\\w+))?)*$")){
                throw new IllegalArgumentException("The jshintOptions options is not formated correctly," +
                    "the format support String such as: <key>,<key>=<value>");
            }

            Collections.addAll(formatOpts, options.split(","));
        }

        if(bitwise != null){
            formatOpts.add("bitwise=" + bitwise.toString());
        }

        if(camelcase != null){
            formatOpts.add("camelcase=" +camelcase.toString());
        }

        if(curly != null){
            formatOpts.add("curly=" +curly.toString());
        }

        if(es3 != null){
            formatOpts.add("es3=" +es3.toString());
        }

        if(forin != null){
            formatOpts.add("forin=" +forin.toString());
        }

        if(immed != null){
            formatOpts.add("immed=" +immed.toString());
        }

        if(indent != null){
            formatOpts.add("indent=" +indent.toString());
        }

        if(latedef != null){
            formatOpts.add("latedef=" +latedef.toString());
        }

        if(newcap != null){
            formatOpts.add("newcap=" +newcap.toString());
        }

        if(noarg != null){
            formatOpts.add("noarg=" +noarg.toString());
        }

        if(noempty != null){
            formatOpts.add("noempty=" +noempty.toString());
        }

        if(nonew != null){
            formatOpts.add("nonew=" +nonew.toString());
        }

        if(plusplus != null){
            formatOpts.add("plusplus=" +plusplus.toString());
        }

        if(quotmark != null){
            if(!(quotmark.equals("single") || quotmark.equals("double") || quotmark.equals("true"))){
                throw new IllegalArgumentException("The jshintOptions quotmark must have the value single,double or true");
            }
            formatOpts.add("quotmark=" +quotmark);
        }

        if(undef != null){
            formatOpts.add("undef=" + undef.toString());
        }

        if(unused != null){
            formatOpts.add("unused=" + unused.toString());
        }

        if(strict != null){
            formatOpts.add("strict=" + strict.toString());
        }

        if(trailing != null){
            formatOpts.add("trailing=" + trailing.toString());
        }

        if(maxparams != null){
            formatOpts.add("maxparams=" + maxparams.toString());
        }

        if(maxdepth != null){
            formatOpts.add("maxdepth=" + maxdepth.toString());
        }

        if(maxstatements != null){
            formatOpts.add("maxstatements=" + maxstatements.toString());
        }

        if(maxcomplexity != null){
            formatOpts.add("maxcomplexity=" + maxcomplexity.toString());
        }

        if(maxlen != null){
            formatOpts.add("maxlen=" + maxlen.toString());
        }

        return formatOpts.toArray(new String[formatOpts.size()]);
    }
}
]]>
</codefragment>
</duplication>
<duplication lines="60" tokens="352">
<file line="500" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="771" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="833" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1162" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1532" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Copy `js` project dependencies to the target/libs folder. Copy `css` project dependencies to the target/web folder. The location can be changed using the webDir and libsDir option", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
                append( sb, "The plugin dependencies.", 3 );
                append( sb, "", 0 );

                append( sb, "stylesheetsDir (Default: src/main/stylesheets)", 2 );
                append( sb, "Where are LESS, CSS and SASS/SCSS files.", 3 );
                append( sb, "", 0 );

                append( sb, "workDir (Default: target/www)", 2 );
                append( sb, "Where are the output files written.", 3 );
                append( sb, "", 0 );

                append( sb, "workTestDir (Default: target/www-test)", 2 );
                append( sb, "Where are the output test files written.", 3 );
                append( sb, "", 0 );
            }
        }

        if ( goal == null || goal.length() <= 0 || "test-compile-coffeescript".equals( goal ) )
]]>
</codefragment>
</duplication>
<duplication lines="50" tokens="292">
<file line="418" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1664" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Copy JavaScript sources to the work directory and check JavaScript sources with\n-\tCheck the code using JSLint\n-\tCheck the code using JSHint\nTODO Exclude strict mode.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "jshintOptions", 2 );
                append( sb, "JSHint configuration options.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
                append( sb, "The plugin dependencies.", 3 );
                append( sb, "", 0 );

                append( sb, "skipJsHint (Default: true)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="50" tokens="292">
<file line="286" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1594" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Compiles CoffeeScript files. CoffeeScript files are generally in the src/test/coffee directory. It can be configured using the coffeeScriptTestDir parameter. If the directory does not exist, the compilation is skipped.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
                append( sb, "The plugin dependencies.", 3 );
                append( sb, "", 0 );

                append( sb, "skipCoffeeScriptCompilation (Default: false)", 2 );
                append( sb, "Enables / Disables the coffeescript compilation. Be aware that this property disables the compilation on both main sources and test sources.", 3 );
                append( sb, "", 0 );

                append( sb, "skipCoffeeScriptTestCompilation (Default: false)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="46" tokens="268">
<file line="286" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="352" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="500" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="562" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Compiles Sass files.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
                append( sb, "The plugin dependencies.", 3 );
                append( sb, "", 0 );

                append( sb, "skipSass (Default: false)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="42" tokens="244">
<file line="286" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1458" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Optimizes PNG files using optiPNG (http://optipng.sourceforge.net/). OptiPNG must be installed and the executable `optipng` available form the system path.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "optiPngOptimizationLevel (Default: 2)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="39" tokens="228">
<file line="1096" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1664" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Copy JavaScript sources to the work directory and check JavaScript sources with\n-\tCheck the code using JSLint\n-\tCheck the code using JSHint\nTODO Exclude strict mode.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "jshintOptions", 2 );
                append( sb, "JSHint configuration options.", 3 );
]]>
</codefragment>
</duplication>
<duplication lines="39" tokens="228">
<file line="1095" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1161" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "coffee-mill:jslint-report", 0 );
            append( sb, "Builds the JSHint Report.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="39" tokens="228">
<file line="418" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1096" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Builds the JSHint Report.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "jshintOptions", 2 );
                append( sb, "(no description available)", 3 );
]]>
</codefragment>
</duplication>
<duplication lines="38" tokens="223">
<file line="228" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="294" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1330" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "Enables / Disables the attachment of the minified file to the Maven project. Enabled by default.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
                append( sb, "The plugin dependencies.", 3 );
                append( sb, "", 0 );

                append( sb, "skipMinification (Default: false)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="38" tokens="220">
<file line="286" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="418" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1388" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Optimizes JPEG files using jpegtran (http://jpegclub.org/jpegtran/). JpegTran must be installed and the executable `jpegtran` available form the system path.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "jpegTranVerbose (Default: true)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="35" tokens="207">
<file line="1235" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1329" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "attachMinifiedCSS (Default: true)", 2 );
                append( sb, "Enables / Disables the attachment of the minified file to the Maven project. Enabled by default.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="29" tokens="204">
<file line="37" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/processors/JSHintProcessor.java"/>
<file line="36" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/processors/JSLintProcessor.java"/>
<codefragment>
<![CDATA[
        getLog().info("Checking sources with JsLint");
        Collection<File> files = FileUtils.listFiles(mojo.getWorkDirectory(), new String[]{"js"}, true);
        for (File file : files) {
            List<ProcessorWarning> warnings = validate(file);
            getLog().info("Found " + warnings.size() + " issues in " + file.getAbsolutePath());
            for (ProcessorWarning warning: warnings) {
                getLog().warn("In " + warning.file.getName() + " @" + warning.line + ":" + warning.character
                        + " -> " + warning.evidence + " - " + warning.reason);
            }
        }
    }

    @Override
    public boolean accept(File file) {
        return file.isFile() && isFileContainedInDirectory(file, mojo.getWorkDirectory());
    }

    @Override
    public void fileCreated(File file) throws ProcessorException {
        validate(file);
    }

    @Override
    public void fileUpdated(File file) throws ProcessorException {
        validate(file);
    }

    public List<ProcessorWarning> validate(File file) {
        List<ProcessorWarning> warnings = new ArrayList<ProcessorWarning>();
]]>
</codefragment>
</duplication>
<duplication lines="35" tokens="203">
<file line="113" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="179" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "cssAggregation", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
                append( sb, "The plugin dependencies.", 3 );
                append( sb, "", 0 );

                append( sb, "stylesheetsDir (Default: src/main/stylesheets)", 2 );
                append( sb, "Where are LESS, CSS and SASS/SCSS files.", 3 );
                append( sb, "", 0 );

                append( sb, "workDir (Default: target/www)", 2 );
                append( sb, "Where are the output files written.", 3 );
                append( sb, "", 0 );

                append( sb, "workTestDir (Default: target/www-test)", 2 );
                append( sb, "Where are the output test files written.", 3 );
                append( sb, "", 0 );
            }
        }

        if ( goal == null || goal.length() <= 0 || "build-zip".equals( goal ) )
]]>
</codefragment>
</duplication>
<duplication lines="34" tokens="199">
<file line="228" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1236" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "Enables / Disables the attachment of the minified file to the Maven project. Enabled by default.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "minifier (Default: GOOGLE_CLOSURE)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="34" tokens="196">
<file line="286" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="927" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "(no description available)", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptIntegrationTestDir (Default: src/integration-test/js)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="34" tokens="196">
<file line="150" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1738" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "This mojo watches the file change in the source directories and process them automatically. To work correctly, launch mvn clean test first. This will resolve and prepare all required file. Then mvn org.nanoko.coffee-mill:coffee-mill-maven-plugin:watch will starts the watch mode. This mojo supports reactor mode, i.e. is able to watch several modules and updates files. To enable this mode, launch the watch mode with -Dwatched.project=artifactId of the final project. This will watch all resources of all the modules of the reactor and copy the resulting artifact on the other module in the specified project. You can configure the watched port with the -Dwatch.port=8234 option. By default the used port is 8234.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "cssAggregation", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "", 0 );

                append( sb, "javascriptAggregation", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="31" tokens="180">
<file line="926" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1004" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "coffee-mill:jasmine-test", 0 );
            append( sb, "(no description available)", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javascriptAggregation", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="31" tokens="180">
<file line="84" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1005" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "(no description available)", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javascriptAggregation", 2 );
                append( sb, "The list in order of the javascript file to include. This list is shared with the javascript aggregation.", 3 );
]]>
</codefragment>
</duplication>
<duplication lines="30" tokens="175">
<file line="228" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="426" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "jshintOptions", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="30" tokens="172">
<file line="84" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="150" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="632" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
            append( sb, "Compress HTML pages using HtmlCompressor.", 1 );
            append( sb, "", 0 );
            if ( detail )
            {
                append( sb, "Available parameters:", 1 );
                append( sb, "", 0 );

                append( sb, "assetsDir (Default: src/main/www)", 2 );
                append( sb, "Where are the assets.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "htmlCompressionGenerateStatistics (Default: true)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="26" tokens="151">
<file line="935" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1236" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "Enables / Disables the attachment of the minified file to the Maven project. Enabled by default.", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="22" tokens="151">
<file line="247" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/utils/RhinoLauncher.java"/>
<file line="96" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/utils/SlimedRhinoLauncher.java"/>
<codefragment>
<![CDATA[
    public static String toJSMultiLineString(String data){
        final String[] lines = data.split("\n");
        final StringBuffer result = new StringBuffer("[");
        if (lines.length == 0) {
            result.append("\"\"");
        }
        for (int i = 0; i < lines.length; i++) {
            final String line = lines[i];
            result.append("\"");
            result.append(line.replace("\\", "\\\\").replace("\"", "\\\"").replaceAll("\\r|\\n", ""));
            // this is used to force a single line to have at least one new line (otherwise cssLint fails).
            if (lines.length == 1) {
                result.append("\\n");
            }
            result.append("\"");
            if (i < lines.length - 1) {
                result.append(",");
            }
        }
        result.append("].join(\"\\n\")");
        return result.toString();
    }
]]>
</codefragment>
</duplication>
<duplication lines="26" tokens="147">
<file line="1290" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1360" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
                append( sb, "The plugin dependencies.", 3 );
                append( sb, "", 0 );

                append( sb, "skipMinification (Default: false)", 2 );
                append( sb, "Enables to skip the minification phase.", 3 );
                append( sb, "", 0 );

                append( sb, "stylesheetsDir (Default: src/main/stylesheets)", 2 );
                append( sb, "Where are LESS, CSS and SASS/SCSS files.", 3 );
                append( sb, "", 0 );

                append( sb, "workDir (Default: target/www)", 2 );
                append( sb, "Where are the output files written.", 3 );
                append( sb, "", 0 );

                append( sb, "workTestDir (Default: target/www-test)", 2 );
                append( sb, "Where are the output test files written.", 3 );
                append( sb, "", 0 );
            }
        }

        if ( goal == null || goal.length() <= 0 || "optimize-jpeg".equals( goal ) )
]]>
</codefragment>
</duplication>
<duplication lines="26" tokens="147">
<file line="122" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1134" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "(no description available)", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
                append( sb, "The plugin dependencies.", 3 );
                append( sb, "", 0 );

                append( sb, "stylesheetsDir (Default: src/main/stylesheets)", 2 );
                append( sb, "Where are LESS, CSS and SASS/SCSS files.", 3 );
                append( sb, "", 0 );

                append( sb, "workDir (Default: target/www)", 2 );
                append( sb, "Where are the output files written.", 3 );
                append( sb, "", 0 );

                append( sb, "workTestDir (Default: target/www-test)", 2 );
                append( sb, "Where are the output test files written.", 3 );
                append( sb, "", 0 );
            }
        }

        if ( goal == null || goal.length() <= 0 || "jslint-report".equals( goal ) )
]]>
</codefragment>
</duplication>
<duplication lines="15" tokens="141">
<file line="71" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/utils/JasmineUtils.java"/>
<file line="119" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/utils/JasmineUtils.java"/>
<codefragment>
<![CDATA[
        for (Dependency dep : (Collection<Dependency>) mill.project.getDependencies()) {
            if ("js".equals(dep.getType())) {
                String filename = dep.getArtifactId() + ".js";
                if (dep.getClassifier() != null  && ! dep.getClassifier().equals("min")) {
                    filename = dep.getArtifactId() + "-" + dep.getClassifier() + ".js";
                }
                File file = new File(mill.getLibDirectory(), filename);

                if (! file.exists()) {
                    mill.getLog().error("Cannot preload " + dep.getArtifactId() + ":" + dep.getVersion() + " : " +
                            file
                                    .getAbsolutePath() + " not found");
                } else {
                    try {
                        FileUtils.copyFileToDirectory(file, getJasmineITDirectory(mill.project));
]]>
</codefragment>
</duplication>
<duplication lines="22" tokens="134">
<file line="73" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/processors/CSSFileCopyProcessor.java"/>
<file line="79" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/src/main/java/org/nanoko/coffee/mill/processors/JavaScriptFileCopyProcessor.java"/>
<codefragment>
<![CDATA[
        return isFileContainedInDirectory(file, source)  && file.isFile()  &&  file.getName().endsWith(".js");
    }

    public void fileCreated(File file) throws ProcessorException {
        getLog().info("Copying " + file.getAbsolutePath() + " to " + destination.getAbsolutePath());
        copyFileToDir(file, source, destination);
    }

    public void fileUpdated(File file) throws ProcessorException {
        getLog().info("Copying " + file.getAbsolutePath() + " to " + destination.getAbsolutePath());
        copyFileToDir(file, source, destination);
    }

    public void fileDeleted(File file) {
        File rel = computeRelativeFile(file, source, destination);
        if (rel.isFile()) {
            getLog().info("Deleting " + rel.getAbsolutePath());
            rel.delete();
        }
    }

}
]]>
</codefragment>
</duplication>
<duplication lines="22" tokens="127">
<file line="92" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="228" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "(no description available)", 3 );
                append( sb, "", 0 );

                append( sb, "baseDirectory", 2 );
                append( sb, "Base directory of the project.", 3 );
                append( sb, "Expression: ${basedir}", 3 );
                append( sb, "", 0 );

                append( sb, "buildDirectory", 2 );
                append( sb, "Directory containing the build files.", 3 );
                append( sb, "Expression: ${project.build.directory}", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptDir (Default: src/main/coffee)", 2 );
                append( sb, "Where are CoffeeScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "coffeeScriptTestDir (Default: src/test/coffee)", 2 );
                append( sb, "Where are CoffeeScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="20" tokens="111">
<file line="114" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="731" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1035" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "The list in order of the javascript file to include. This list is shared with the javascript aggregation.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptDir (Default: src/main/js)", 2 );
                append( sb, "Where are JavaScript files.", 3 );
                append( sb, "", 0 );

                append( sb, "javaScriptTestDir (Default: src/test/js)", 2 );
                append( sb, "Where are JavaScript files implementing tests.", 3 );
                append( sb, "", 0 );

                append( sb, "libDir (Default: target/libs)", 2 );
                append( sb, "Where are the dependencies copies.", 3 );
                append( sb, "", 0 );

                append( sb, "pluginDependencies (Default: ${plugin.artifacts})", 2 );
                append( sb, "The plugin dependencies.", 3 );
                append( sb, "", 0 );

                append( sb, "skipJasmineTest (Default: false)", 2 );
]]>
</codefragment>
</duplication>
<duplication lines="19" tokens="107">
<file line="265" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="984" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<file line="1054" path="/Users/clement/Projects/nanoko/coffee-mill-maven-plugin/coffee-mill-maven-plugin/target/generated-sources/plugin/org/nanoko/coffee/mill/mojos/compile/HelpMojo.java"/>
<codefragment>
<![CDATA[
                append( sb, "skipJasmineTest (Default: false)", 2 );
                append( sb, "(no description available)", 3 );
                append( sb, "", 0 );

                append( sb, "stylesheetsDir (Default: src/main/stylesheets)", 2 );
                append( sb, "Where are LESS, CSS and SASS/SCSS files.", 3 );
                append( sb, "", 0 );

                append( sb, "workDir (Default: target/www)", 2 );
                append( sb, "Where are the output files written.", 3 );
                append( sb, "", 0 );

                append( sb, "workTestDir (Default: target/www-test)", 2 );
                append( sb, "Where are the output test files written.", 3 );
                append( sb, "", 0 );
            }
        }

        if ( goal == null || goal.length() <= 0 || "jsdoc".equals( goal ) )
]]>
</codefragment>
</duplication>
</pmd-cpd>