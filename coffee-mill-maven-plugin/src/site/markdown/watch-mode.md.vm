# I'm watching you

The _watch_ mode is a way to launch the coffee-mill plugin to monitor your files and process them automatically.
Everytime you change a file, it will process it. For example, changing a coffeescript file compiles it and builds
aggregated JavaScript file.

In addition, the _watch_ mode starts it's own HTTP Server, providing the Jasmine runner,
and all CSS and JavaScript files.

Starting the watch mode
-------------------------

To start the _watch_ mode, just launch:

    mvn ${project.groupId}:${project.artifactId}:watch

It's recommended to run `mvn process-resources` first to resolve all dependencies.

For more configuration, check the _watch_ mode mojo.

Watch mode server
-------------------

The server started by the watch mode serve:

* all content of the _target/www_ folder in _/_
* all dependencies are published in _/_
* the Jasmine runner is available on _/jasmine_

So to run the Jasmine test, just open: http://localhost:8234/jasmine.
If you have an `index.html` page, access it with: http://localhost:8234/index.html

Don't forget that dependencies files don't have their version and _min_ classifier. So,
a dependency on `com.jquery:jquery:1.7.:min:js` can be loaded from `http://localhost:1234/jquery.js`.

By default, the server is listening the port 8234. It can be configured using the `-Dwatch.port` option:

    mvn ${project.groupId}:${project.artifactId}:watch -Dwatch.port=8080

Watch mode and reactor
----------------------

${project.artifactId} is able watching several modules:

    pom.xml <-- reactor
    module1
    module2
    application

In this project, _application_ is the final project. It depends on the artifact (js and css) generated by _module1_ and
 _module2_. The resulting artifacts from the _module1_ and _module2_ are computed and copied into the right folder of
 _application_ as soon as any changes is detected on their files.

To launch the watch mode on reactor, run from the reactor root:

     mvn ${project.groupId}:${project.artifactId}:watch -Dwatched.project=application

The _watched.project_ property specified the final application in which resources will be copied. You need to
indicate the artifact id.

